#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_398726393068994039) {
   out_398726393068994039[0] = 0;
   out_398726393068994039[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_398726393068994039[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_398726393068994039[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_398726393068994039[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_398726393068994039[5] = -sin(in_vec[1]);
   out_398726393068994039[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_398726393068994039[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_398726393068994039[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_398726393068994039[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_398726393068994039[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_398726393068994039[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_398726393068994039[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_398726393068994039[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_398726393068994039[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_398726393068994039[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_398726393068994039[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_398726393068994039[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7226699364716968282) {
   out_7226699364716968282[0] = delta_x[0] + nom_x[0];
   out_7226699364716968282[1] = delta_x[1] + nom_x[1];
   out_7226699364716968282[2] = delta_x[2] + nom_x[2];
   out_7226699364716968282[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7226699364716968282[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7226699364716968282[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7226699364716968282[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7226699364716968282[7] = delta_x[6] + nom_x[7];
   out_7226699364716968282[8] = delta_x[7] + nom_x[8];
   out_7226699364716968282[9] = delta_x[8] + nom_x[9];
   out_7226699364716968282[10] = delta_x[9] + nom_x[10];
   out_7226699364716968282[11] = delta_x[10] + nom_x[11];
   out_7226699364716968282[12] = delta_x[11] + nom_x[12];
   out_7226699364716968282[13] = delta_x[12] + nom_x[13];
   out_7226699364716968282[14] = delta_x[13] + nom_x[14];
   out_7226699364716968282[15] = delta_x[14] + nom_x[15];
   out_7226699364716968282[16] = delta_x[15] + nom_x[16];
   out_7226699364716968282[17] = delta_x[16] + nom_x[17];
   out_7226699364716968282[18] = delta_x[17] + nom_x[18];
   out_7226699364716968282[19] = delta_x[18] + nom_x[19];
   out_7226699364716968282[20] = delta_x[19] + nom_x[20];
   out_7226699364716968282[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3146457545800539540) {
   out_3146457545800539540[0] = -nom_x[0] + true_x[0];
   out_3146457545800539540[1] = -nom_x[1] + true_x[1];
   out_3146457545800539540[2] = -nom_x[2] + true_x[2];
   out_3146457545800539540[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3146457545800539540[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3146457545800539540[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3146457545800539540[6] = -nom_x[7] + true_x[7];
   out_3146457545800539540[7] = -nom_x[8] + true_x[8];
   out_3146457545800539540[8] = -nom_x[9] + true_x[9];
   out_3146457545800539540[9] = -nom_x[10] + true_x[10];
   out_3146457545800539540[10] = -nom_x[11] + true_x[11];
   out_3146457545800539540[11] = -nom_x[12] + true_x[12];
   out_3146457545800539540[12] = -nom_x[13] + true_x[13];
   out_3146457545800539540[13] = -nom_x[14] + true_x[14];
   out_3146457545800539540[14] = -nom_x[15] + true_x[15];
   out_3146457545800539540[15] = -nom_x[16] + true_x[16];
   out_3146457545800539540[16] = -nom_x[17] + true_x[17];
   out_3146457545800539540[17] = -nom_x[18] + true_x[18];
   out_3146457545800539540[18] = -nom_x[19] + true_x[19];
   out_3146457545800539540[19] = -nom_x[20] + true_x[20];
   out_3146457545800539540[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7216981441376091161) {
   out_7216981441376091161[0] = 1.0;
   out_7216981441376091161[1] = 0;
   out_7216981441376091161[2] = 0;
   out_7216981441376091161[3] = 0;
   out_7216981441376091161[4] = 0;
   out_7216981441376091161[5] = 0;
   out_7216981441376091161[6] = 0;
   out_7216981441376091161[7] = 0;
   out_7216981441376091161[8] = 0;
   out_7216981441376091161[9] = 0;
   out_7216981441376091161[10] = 0;
   out_7216981441376091161[11] = 0;
   out_7216981441376091161[12] = 0;
   out_7216981441376091161[13] = 0;
   out_7216981441376091161[14] = 0;
   out_7216981441376091161[15] = 0;
   out_7216981441376091161[16] = 0;
   out_7216981441376091161[17] = 0;
   out_7216981441376091161[18] = 0;
   out_7216981441376091161[19] = 0;
   out_7216981441376091161[20] = 0;
   out_7216981441376091161[21] = 0;
   out_7216981441376091161[22] = 1.0;
   out_7216981441376091161[23] = 0;
   out_7216981441376091161[24] = 0;
   out_7216981441376091161[25] = 0;
   out_7216981441376091161[26] = 0;
   out_7216981441376091161[27] = 0;
   out_7216981441376091161[28] = 0;
   out_7216981441376091161[29] = 0;
   out_7216981441376091161[30] = 0;
   out_7216981441376091161[31] = 0;
   out_7216981441376091161[32] = 0;
   out_7216981441376091161[33] = 0;
   out_7216981441376091161[34] = 0;
   out_7216981441376091161[35] = 0;
   out_7216981441376091161[36] = 0;
   out_7216981441376091161[37] = 0;
   out_7216981441376091161[38] = 0;
   out_7216981441376091161[39] = 0;
   out_7216981441376091161[40] = 0;
   out_7216981441376091161[41] = 0;
   out_7216981441376091161[42] = 0;
   out_7216981441376091161[43] = 0;
   out_7216981441376091161[44] = 1.0;
   out_7216981441376091161[45] = 0;
   out_7216981441376091161[46] = 0;
   out_7216981441376091161[47] = 0;
   out_7216981441376091161[48] = 0;
   out_7216981441376091161[49] = 0;
   out_7216981441376091161[50] = 0;
   out_7216981441376091161[51] = 0;
   out_7216981441376091161[52] = 0;
   out_7216981441376091161[53] = 0;
   out_7216981441376091161[54] = 0;
   out_7216981441376091161[55] = 0;
   out_7216981441376091161[56] = 0;
   out_7216981441376091161[57] = 0;
   out_7216981441376091161[58] = 0;
   out_7216981441376091161[59] = 0;
   out_7216981441376091161[60] = 0;
   out_7216981441376091161[61] = 0;
   out_7216981441376091161[62] = 0;
   out_7216981441376091161[63] = 0;
   out_7216981441376091161[64] = 0;
   out_7216981441376091161[65] = 0;
   out_7216981441376091161[66] = -0.5*state[4];
   out_7216981441376091161[67] = -0.5*state[5];
   out_7216981441376091161[68] = -0.5*state[6];
   out_7216981441376091161[69] = 0;
   out_7216981441376091161[70] = 0;
   out_7216981441376091161[71] = 0;
   out_7216981441376091161[72] = 0;
   out_7216981441376091161[73] = 0;
   out_7216981441376091161[74] = 0;
   out_7216981441376091161[75] = 0;
   out_7216981441376091161[76] = 0;
   out_7216981441376091161[77] = 0;
   out_7216981441376091161[78] = 0;
   out_7216981441376091161[79] = 0;
   out_7216981441376091161[80] = 0;
   out_7216981441376091161[81] = 0;
   out_7216981441376091161[82] = 0;
   out_7216981441376091161[83] = 0;
   out_7216981441376091161[84] = 0;
   out_7216981441376091161[85] = 0;
   out_7216981441376091161[86] = 0;
   out_7216981441376091161[87] = 0.5*state[3];
   out_7216981441376091161[88] = 0.5*state[6];
   out_7216981441376091161[89] = -0.5*state[5];
   out_7216981441376091161[90] = 0;
   out_7216981441376091161[91] = 0;
   out_7216981441376091161[92] = 0;
   out_7216981441376091161[93] = 0;
   out_7216981441376091161[94] = 0;
   out_7216981441376091161[95] = 0;
   out_7216981441376091161[96] = 0;
   out_7216981441376091161[97] = 0;
   out_7216981441376091161[98] = 0;
   out_7216981441376091161[99] = 0;
   out_7216981441376091161[100] = 0;
   out_7216981441376091161[101] = 0;
   out_7216981441376091161[102] = 0;
   out_7216981441376091161[103] = 0;
   out_7216981441376091161[104] = 0;
   out_7216981441376091161[105] = 0;
   out_7216981441376091161[106] = 0;
   out_7216981441376091161[107] = 0;
   out_7216981441376091161[108] = -0.5*state[6];
   out_7216981441376091161[109] = 0.5*state[3];
   out_7216981441376091161[110] = 0.5*state[4];
   out_7216981441376091161[111] = 0;
   out_7216981441376091161[112] = 0;
   out_7216981441376091161[113] = 0;
   out_7216981441376091161[114] = 0;
   out_7216981441376091161[115] = 0;
   out_7216981441376091161[116] = 0;
   out_7216981441376091161[117] = 0;
   out_7216981441376091161[118] = 0;
   out_7216981441376091161[119] = 0;
   out_7216981441376091161[120] = 0;
   out_7216981441376091161[121] = 0;
   out_7216981441376091161[122] = 0;
   out_7216981441376091161[123] = 0;
   out_7216981441376091161[124] = 0;
   out_7216981441376091161[125] = 0;
   out_7216981441376091161[126] = 0;
   out_7216981441376091161[127] = 0;
   out_7216981441376091161[128] = 0;
   out_7216981441376091161[129] = 0.5*state[5];
   out_7216981441376091161[130] = -0.5*state[4];
   out_7216981441376091161[131] = 0.5*state[3];
   out_7216981441376091161[132] = 0;
   out_7216981441376091161[133] = 0;
   out_7216981441376091161[134] = 0;
   out_7216981441376091161[135] = 0;
   out_7216981441376091161[136] = 0;
   out_7216981441376091161[137] = 0;
   out_7216981441376091161[138] = 0;
   out_7216981441376091161[139] = 0;
   out_7216981441376091161[140] = 0;
   out_7216981441376091161[141] = 0;
   out_7216981441376091161[142] = 0;
   out_7216981441376091161[143] = 0;
   out_7216981441376091161[144] = 0;
   out_7216981441376091161[145] = 0;
   out_7216981441376091161[146] = 0;
   out_7216981441376091161[147] = 0;
   out_7216981441376091161[148] = 0;
   out_7216981441376091161[149] = 0;
   out_7216981441376091161[150] = 0;
   out_7216981441376091161[151] = 0;
   out_7216981441376091161[152] = 0;
   out_7216981441376091161[153] = 1.0;
   out_7216981441376091161[154] = 0;
   out_7216981441376091161[155] = 0;
   out_7216981441376091161[156] = 0;
   out_7216981441376091161[157] = 0;
   out_7216981441376091161[158] = 0;
   out_7216981441376091161[159] = 0;
   out_7216981441376091161[160] = 0;
   out_7216981441376091161[161] = 0;
   out_7216981441376091161[162] = 0;
   out_7216981441376091161[163] = 0;
   out_7216981441376091161[164] = 0;
   out_7216981441376091161[165] = 0;
   out_7216981441376091161[166] = 0;
   out_7216981441376091161[167] = 0;
   out_7216981441376091161[168] = 0;
   out_7216981441376091161[169] = 0;
   out_7216981441376091161[170] = 0;
   out_7216981441376091161[171] = 0;
   out_7216981441376091161[172] = 0;
   out_7216981441376091161[173] = 0;
   out_7216981441376091161[174] = 0;
   out_7216981441376091161[175] = 1.0;
   out_7216981441376091161[176] = 0;
   out_7216981441376091161[177] = 0;
   out_7216981441376091161[178] = 0;
   out_7216981441376091161[179] = 0;
   out_7216981441376091161[180] = 0;
   out_7216981441376091161[181] = 0;
   out_7216981441376091161[182] = 0;
   out_7216981441376091161[183] = 0;
   out_7216981441376091161[184] = 0;
   out_7216981441376091161[185] = 0;
   out_7216981441376091161[186] = 0;
   out_7216981441376091161[187] = 0;
   out_7216981441376091161[188] = 0;
   out_7216981441376091161[189] = 0;
   out_7216981441376091161[190] = 0;
   out_7216981441376091161[191] = 0;
   out_7216981441376091161[192] = 0;
   out_7216981441376091161[193] = 0;
   out_7216981441376091161[194] = 0;
   out_7216981441376091161[195] = 0;
   out_7216981441376091161[196] = 0;
   out_7216981441376091161[197] = 1.0;
   out_7216981441376091161[198] = 0;
   out_7216981441376091161[199] = 0;
   out_7216981441376091161[200] = 0;
   out_7216981441376091161[201] = 0;
   out_7216981441376091161[202] = 0;
   out_7216981441376091161[203] = 0;
   out_7216981441376091161[204] = 0;
   out_7216981441376091161[205] = 0;
   out_7216981441376091161[206] = 0;
   out_7216981441376091161[207] = 0;
   out_7216981441376091161[208] = 0;
   out_7216981441376091161[209] = 0;
   out_7216981441376091161[210] = 0;
   out_7216981441376091161[211] = 0;
   out_7216981441376091161[212] = 0;
   out_7216981441376091161[213] = 0;
   out_7216981441376091161[214] = 0;
   out_7216981441376091161[215] = 0;
   out_7216981441376091161[216] = 0;
   out_7216981441376091161[217] = 0;
   out_7216981441376091161[218] = 0;
   out_7216981441376091161[219] = 1.0;
   out_7216981441376091161[220] = 0;
   out_7216981441376091161[221] = 0;
   out_7216981441376091161[222] = 0;
   out_7216981441376091161[223] = 0;
   out_7216981441376091161[224] = 0;
   out_7216981441376091161[225] = 0;
   out_7216981441376091161[226] = 0;
   out_7216981441376091161[227] = 0;
   out_7216981441376091161[228] = 0;
   out_7216981441376091161[229] = 0;
   out_7216981441376091161[230] = 0;
   out_7216981441376091161[231] = 0;
   out_7216981441376091161[232] = 0;
   out_7216981441376091161[233] = 0;
   out_7216981441376091161[234] = 0;
   out_7216981441376091161[235] = 0;
   out_7216981441376091161[236] = 0;
   out_7216981441376091161[237] = 0;
   out_7216981441376091161[238] = 0;
   out_7216981441376091161[239] = 0;
   out_7216981441376091161[240] = 0;
   out_7216981441376091161[241] = 1.0;
   out_7216981441376091161[242] = 0;
   out_7216981441376091161[243] = 0;
   out_7216981441376091161[244] = 0;
   out_7216981441376091161[245] = 0;
   out_7216981441376091161[246] = 0;
   out_7216981441376091161[247] = 0;
   out_7216981441376091161[248] = 0;
   out_7216981441376091161[249] = 0;
   out_7216981441376091161[250] = 0;
   out_7216981441376091161[251] = 0;
   out_7216981441376091161[252] = 0;
   out_7216981441376091161[253] = 0;
   out_7216981441376091161[254] = 0;
   out_7216981441376091161[255] = 0;
   out_7216981441376091161[256] = 0;
   out_7216981441376091161[257] = 0;
   out_7216981441376091161[258] = 0;
   out_7216981441376091161[259] = 0;
   out_7216981441376091161[260] = 0;
   out_7216981441376091161[261] = 0;
   out_7216981441376091161[262] = 0;
   out_7216981441376091161[263] = 1.0;
   out_7216981441376091161[264] = 0;
   out_7216981441376091161[265] = 0;
   out_7216981441376091161[266] = 0;
   out_7216981441376091161[267] = 0;
   out_7216981441376091161[268] = 0;
   out_7216981441376091161[269] = 0;
   out_7216981441376091161[270] = 0;
   out_7216981441376091161[271] = 0;
   out_7216981441376091161[272] = 0;
   out_7216981441376091161[273] = 0;
   out_7216981441376091161[274] = 0;
   out_7216981441376091161[275] = 0;
   out_7216981441376091161[276] = 0;
   out_7216981441376091161[277] = 0;
   out_7216981441376091161[278] = 0;
   out_7216981441376091161[279] = 0;
   out_7216981441376091161[280] = 0;
   out_7216981441376091161[281] = 0;
   out_7216981441376091161[282] = 0;
   out_7216981441376091161[283] = 0;
   out_7216981441376091161[284] = 0;
   out_7216981441376091161[285] = 1.0;
   out_7216981441376091161[286] = 0;
   out_7216981441376091161[287] = 0;
   out_7216981441376091161[288] = 0;
   out_7216981441376091161[289] = 0;
   out_7216981441376091161[290] = 0;
   out_7216981441376091161[291] = 0;
   out_7216981441376091161[292] = 0;
   out_7216981441376091161[293] = 0;
   out_7216981441376091161[294] = 0;
   out_7216981441376091161[295] = 0;
   out_7216981441376091161[296] = 0;
   out_7216981441376091161[297] = 0;
   out_7216981441376091161[298] = 0;
   out_7216981441376091161[299] = 0;
   out_7216981441376091161[300] = 0;
   out_7216981441376091161[301] = 0;
   out_7216981441376091161[302] = 0;
   out_7216981441376091161[303] = 0;
   out_7216981441376091161[304] = 0;
   out_7216981441376091161[305] = 0;
   out_7216981441376091161[306] = 0;
   out_7216981441376091161[307] = 1.0;
   out_7216981441376091161[308] = 0;
   out_7216981441376091161[309] = 0;
   out_7216981441376091161[310] = 0;
   out_7216981441376091161[311] = 0;
   out_7216981441376091161[312] = 0;
   out_7216981441376091161[313] = 0;
   out_7216981441376091161[314] = 0;
   out_7216981441376091161[315] = 0;
   out_7216981441376091161[316] = 0;
   out_7216981441376091161[317] = 0;
   out_7216981441376091161[318] = 0;
   out_7216981441376091161[319] = 0;
   out_7216981441376091161[320] = 0;
   out_7216981441376091161[321] = 0;
   out_7216981441376091161[322] = 0;
   out_7216981441376091161[323] = 0;
   out_7216981441376091161[324] = 0;
   out_7216981441376091161[325] = 0;
   out_7216981441376091161[326] = 0;
   out_7216981441376091161[327] = 0;
   out_7216981441376091161[328] = 0;
   out_7216981441376091161[329] = 1.0;
   out_7216981441376091161[330] = 0;
   out_7216981441376091161[331] = 0;
   out_7216981441376091161[332] = 0;
   out_7216981441376091161[333] = 0;
   out_7216981441376091161[334] = 0;
   out_7216981441376091161[335] = 0;
   out_7216981441376091161[336] = 0;
   out_7216981441376091161[337] = 0;
   out_7216981441376091161[338] = 0;
   out_7216981441376091161[339] = 0;
   out_7216981441376091161[340] = 0;
   out_7216981441376091161[341] = 0;
   out_7216981441376091161[342] = 0;
   out_7216981441376091161[343] = 0;
   out_7216981441376091161[344] = 0;
   out_7216981441376091161[345] = 0;
   out_7216981441376091161[346] = 0;
   out_7216981441376091161[347] = 0;
   out_7216981441376091161[348] = 0;
   out_7216981441376091161[349] = 0;
   out_7216981441376091161[350] = 0;
   out_7216981441376091161[351] = 1.0;
   out_7216981441376091161[352] = 0;
   out_7216981441376091161[353] = 0;
   out_7216981441376091161[354] = 0;
   out_7216981441376091161[355] = 0;
   out_7216981441376091161[356] = 0;
   out_7216981441376091161[357] = 0;
   out_7216981441376091161[358] = 0;
   out_7216981441376091161[359] = 0;
   out_7216981441376091161[360] = 0;
   out_7216981441376091161[361] = 0;
   out_7216981441376091161[362] = 0;
   out_7216981441376091161[363] = 0;
   out_7216981441376091161[364] = 0;
   out_7216981441376091161[365] = 0;
   out_7216981441376091161[366] = 0;
   out_7216981441376091161[367] = 0;
   out_7216981441376091161[368] = 0;
   out_7216981441376091161[369] = 0;
   out_7216981441376091161[370] = 0;
   out_7216981441376091161[371] = 0;
   out_7216981441376091161[372] = 0;
   out_7216981441376091161[373] = 1.0;
   out_7216981441376091161[374] = 0;
   out_7216981441376091161[375] = 0;
   out_7216981441376091161[376] = 0;
   out_7216981441376091161[377] = 0;
   out_7216981441376091161[378] = 0;
   out_7216981441376091161[379] = 0;
   out_7216981441376091161[380] = 0;
   out_7216981441376091161[381] = 0;
   out_7216981441376091161[382] = 0;
   out_7216981441376091161[383] = 0;
   out_7216981441376091161[384] = 0;
   out_7216981441376091161[385] = 0;
   out_7216981441376091161[386] = 0;
   out_7216981441376091161[387] = 0;
   out_7216981441376091161[388] = 0;
   out_7216981441376091161[389] = 0;
   out_7216981441376091161[390] = 0;
   out_7216981441376091161[391] = 0;
   out_7216981441376091161[392] = 0;
   out_7216981441376091161[393] = 0;
   out_7216981441376091161[394] = 0;
   out_7216981441376091161[395] = 1.0;
   out_7216981441376091161[396] = 0;
   out_7216981441376091161[397] = 0;
   out_7216981441376091161[398] = 0;
   out_7216981441376091161[399] = 0;
   out_7216981441376091161[400] = 0;
   out_7216981441376091161[401] = 0;
   out_7216981441376091161[402] = 0;
   out_7216981441376091161[403] = 0;
   out_7216981441376091161[404] = 0;
   out_7216981441376091161[405] = 0;
   out_7216981441376091161[406] = 0;
   out_7216981441376091161[407] = 0;
   out_7216981441376091161[408] = 0;
   out_7216981441376091161[409] = 0;
   out_7216981441376091161[410] = 0;
   out_7216981441376091161[411] = 0;
   out_7216981441376091161[412] = 0;
   out_7216981441376091161[413] = 0;
   out_7216981441376091161[414] = 0;
   out_7216981441376091161[415] = 0;
   out_7216981441376091161[416] = 0;
   out_7216981441376091161[417] = 1.0;
   out_7216981441376091161[418] = 0;
   out_7216981441376091161[419] = 0;
   out_7216981441376091161[420] = 0;
   out_7216981441376091161[421] = 0;
   out_7216981441376091161[422] = 0;
   out_7216981441376091161[423] = 0;
   out_7216981441376091161[424] = 0;
   out_7216981441376091161[425] = 0;
   out_7216981441376091161[426] = 0;
   out_7216981441376091161[427] = 0;
   out_7216981441376091161[428] = 0;
   out_7216981441376091161[429] = 0;
   out_7216981441376091161[430] = 0;
   out_7216981441376091161[431] = 0;
   out_7216981441376091161[432] = 0;
   out_7216981441376091161[433] = 0;
   out_7216981441376091161[434] = 0;
   out_7216981441376091161[435] = 0;
   out_7216981441376091161[436] = 0;
   out_7216981441376091161[437] = 0;
   out_7216981441376091161[438] = 0;
   out_7216981441376091161[439] = 1.0;
   out_7216981441376091161[440] = 0;
   out_7216981441376091161[441] = 0;
   out_7216981441376091161[442] = 0;
   out_7216981441376091161[443] = 0;
   out_7216981441376091161[444] = 0;
   out_7216981441376091161[445] = 0;
   out_7216981441376091161[446] = 0;
   out_7216981441376091161[447] = 0;
   out_7216981441376091161[448] = 0;
   out_7216981441376091161[449] = 0;
   out_7216981441376091161[450] = 0;
   out_7216981441376091161[451] = 0;
   out_7216981441376091161[452] = 0;
   out_7216981441376091161[453] = 0;
   out_7216981441376091161[454] = 0;
   out_7216981441376091161[455] = 0;
   out_7216981441376091161[456] = 0;
   out_7216981441376091161[457] = 0;
   out_7216981441376091161[458] = 0;
   out_7216981441376091161[459] = 0;
   out_7216981441376091161[460] = 0;
   out_7216981441376091161[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3387687771793490306) {
   out_3387687771793490306[0] = dt*state[7] + state[0];
   out_3387687771793490306[1] = dt*state[8] + state[1];
   out_3387687771793490306[2] = dt*state[9] + state[2];
   out_3387687771793490306[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3387687771793490306[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3387687771793490306[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3387687771793490306[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3387687771793490306[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3387687771793490306[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3387687771793490306[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3387687771793490306[10] = state[10];
   out_3387687771793490306[11] = state[11];
   out_3387687771793490306[12] = state[12];
   out_3387687771793490306[13] = state[13];
   out_3387687771793490306[14] = state[14];
   out_3387687771793490306[15] = state[15];
   out_3387687771793490306[16] = state[16];
   out_3387687771793490306[17] = state[17];
   out_3387687771793490306[18] = state[18];
   out_3387687771793490306[19] = state[19];
   out_3387687771793490306[20] = state[20];
   out_3387687771793490306[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2725999673171291231) {
   out_2725999673171291231[0] = 1;
   out_2725999673171291231[1] = 0;
   out_2725999673171291231[2] = 0;
   out_2725999673171291231[3] = 0;
   out_2725999673171291231[4] = 0;
   out_2725999673171291231[5] = 0;
   out_2725999673171291231[6] = dt;
   out_2725999673171291231[7] = 0;
   out_2725999673171291231[8] = 0;
   out_2725999673171291231[9] = 0;
   out_2725999673171291231[10] = 0;
   out_2725999673171291231[11] = 0;
   out_2725999673171291231[12] = 0;
   out_2725999673171291231[13] = 0;
   out_2725999673171291231[14] = 0;
   out_2725999673171291231[15] = 0;
   out_2725999673171291231[16] = 0;
   out_2725999673171291231[17] = 0;
   out_2725999673171291231[18] = 0;
   out_2725999673171291231[19] = 0;
   out_2725999673171291231[20] = 0;
   out_2725999673171291231[21] = 0;
   out_2725999673171291231[22] = 1;
   out_2725999673171291231[23] = 0;
   out_2725999673171291231[24] = 0;
   out_2725999673171291231[25] = 0;
   out_2725999673171291231[26] = 0;
   out_2725999673171291231[27] = 0;
   out_2725999673171291231[28] = dt;
   out_2725999673171291231[29] = 0;
   out_2725999673171291231[30] = 0;
   out_2725999673171291231[31] = 0;
   out_2725999673171291231[32] = 0;
   out_2725999673171291231[33] = 0;
   out_2725999673171291231[34] = 0;
   out_2725999673171291231[35] = 0;
   out_2725999673171291231[36] = 0;
   out_2725999673171291231[37] = 0;
   out_2725999673171291231[38] = 0;
   out_2725999673171291231[39] = 0;
   out_2725999673171291231[40] = 0;
   out_2725999673171291231[41] = 0;
   out_2725999673171291231[42] = 0;
   out_2725999673171291231[43] = 0;
   out_2725999673171291231[44] = 1;
   out_2725999673171291231[45] = 0;
   out_2725999673171291231[46] = 0;
   out_2725999673171291231[47] = 0;
   out_2725999673171291231[48] = 0;
   out_2725999673171291231[49] = 0;
   out_2725999673171291231[50] = dt;
   out_2725999673171291231[51] = 0;
   out_2725999673171291231[52] = 0;
   out_2725999673171291231[53] = 0;
   out_2725999673171291231[54] = 0;
   out_2725999673171291231[55] = 0;
   out_2725999673171291231[56] = 0;
   out_2725999673171291231[57] = 0;
   out_2725999673171291231[58] = 0;
   out_2725999673171291231[59] = 0;
   out_2725999673171291231[60] = 0;
   out_2725999673171291231[61] = 0;
   out_2725999673171291231[62] = 0;
   out_2725999673171291231[63] = 0;
   out_2725999673171291231[64] = 0;
   out_2725999673171291231[65] = 0;
   out_2725999673171291231[66] = 1;
   out_2725999673171291231[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2725999673171291231[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2725999673171291231[69] = 0;
   out_2725999673171291231[70] = 0;
   out_2725999673171291231[71] = 0;
   out_2725999673171291231[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2725999673171291231[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2725999673171291231[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2725999673171291231[75] = 0;
   out_2725999673171291231[76] = 0;
   out_2725999673171291231[77] = 0;
   out_2725999673171291231[78] = 0;
   out_2725999673171291231[79] = 0;
   out_2725999673171291231[80] = 0;
   out_2725999673171291231[81] = 0;
   out_2725999673171291231[82] = 0;
   out_2725999673171291231[83] = 0;
   out_2725999673171291231[84] = 0;
   out_2725999673171291231[85] = 0;
   out_2725999673171291231[86] = 0;
   out_2725999673171291231[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2725999673171291231[88] = 1;
   out_2725999673171291231[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2725999673171291231[90] = 0;
   out_2725999673171291231[91] = 0;
   out_2725999673171291231[92] = 0;
   out_2725999673171291231[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2725999673171291231[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2725999673171291231[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2725999673171291231[96] = 0;
   out_2725999673171291231[97] = 0;
   out_2725999673171291231[98] = 0;
   out_2725999673171291231[99] = 0;
   out_2725999673171291231[100] = 0;
   out_2725999673171291231[101] = 0;
   out_2725999673171291231[102] = 0;
   out_2725999673171291231[103] = 0;
   out_2725999673171291231[104] = 0;
   out_2725999673171291231[105] = 0;
   out_2725999673171291231[106] = 0;
   out_2725999673171291231[107] = 0;
   out_2725999673171291231[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2725999673171291231[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2725999673171291231[110] = 1;
   out_2725999673171291231[111] = 0;
   out_2725999673171291231[112] = 0;
   out_2725999673171291231[113] = 0;
   out_2725999673171291231[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2725999673171291231[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2725999673171291231[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2725999673171291231[117] = 0;
   out_2725999673171291231[118] = 0;
   out_2725999673171291231[119] = 0;
   out_2725999673171291231[120] = 0;
   out_2725999673171291231[121] = 0;
   out_2725999673171291231[122] = 0;
   out_2725999673171291231[123] = 0;
   out_2725999673171291231[124] = 0;
   out_2725999673171291231[125] = 0;
   out_2725999673171291231[126] = 0;
   out_2725999673171291231[127] = 0;
   out_2725999673171291231[128] = 0;
   out_2725999673171291231[129] = 0;
   out_2725999673171291231[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2725999673171291231[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2725999673171291231[132] = 1;
   out_2725999673171291231[133] = 0;
   out_2725999673171291231[134] = 0;
   out_2725999673171291231[135] = 0;
   out_2725999673171291231[136] = 0;
   out_2725999673171291231[137] = 0;
   out_2725999673171291231[138] = 0;
   out_2725999673171291231[139] = 0;
   out_2725999673171291231[140] = 0;
   out_2725999673171291231[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2725999673171291231[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2725999673171291231[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2725999673171291231[144] = 0;
   out_2725999673171291231[145] = 0;
   out_2725999673171291231[146] = 0;
   out_2725999673171291231[147] = 0;
   out_2725999673171291231[148] = 0;
   out_2725999673171291231[149] = 0;
   out_2725999673171291231[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2725999673171291231[151] = 0;
   out_2725999673171291231[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2725999673171291231[153] = 0;
   out_2725999673171291231[154] = 1;
   out_2725999673171291231[155] = 0;
   out_2725999673171291231[156] = 0;
   out_2725999673171291231[157] = 0;
   out_2725999673171291231[158] = 0;
   out_2725999673171291231[159] = 0;
   out_2725999673171291231[160] = 0;
   out_2725999673171291231[161] = 0;
   out_2725999673171291231[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2725999673171291231[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2725999673171291231[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2725999673171291231[165] = 0;
   out_2725999673171291231[166] = 0;
   out_2725999673171291231[167] = 0;
   out_2725999673171291231[168] = 0;
   out_2725999673171291231[169] = 0;
   out_2725999673171291231[170] = 0;
   out_2725999673171291231[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2725999673171291231[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2725999673171291231[173] = 0;
   out_2725999673171291231[174] = 0;
   out_2725999673171291231[175] = 0;
   out_2725999673171291231[176] = 1;
   out_2725999673171291231[177] = 0;
   out_2725999673171291231[178] = 0;
   out_2725999673171291231[179] = 0;
   out_2725999673171291231[180] = 0;
   out_2725999673171291231[181] = 0;
   out_2725999673171291231[182] = 0;
   out_2725999673171291231[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2725999673171291231[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2725999673171291231[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2725999673171291231[186] = 0;
   out_2725999673171291231[187] = 0;
   out_2725999673171291231[188] = 0;
   out_2725999673171291231[189] = 0;
   out_2725999673171291231[190] = 0;
   out_2725999673171291231[191] = 0;
   out_2725999673171291231[192] = 0;
   out_2725999673171291231[193] = 0;
   out_2725999673171291231[194] = 0;
   out_2725999673171291231[195] = 0;
   out_2725999673171291231[196] = 0;
   out_2725999673171291231[197] = 0;
   out_2725999673171291231[198] = 1;
   out_2725999673171291231[199] = 0;
   out_2725999673171291231[200] = 0;
   out_2725999673171291231[201] = 0;
   out_2725999673171291231[202] = 0;
   out_2725999673171291231[203] = 0;
   out_2725999673171291231[204] = 0;
   out_2725999673171291231[205] = 0;
   out_2725999673171291231[206] = 0;
   out_2725999673171291231[207] = 0;
   out_2725999673171291231[208] = 0;
   out_2725999673171291231[209] = 0;
   out_2725999673171291231[210] = 0;
   out_2725999673171291231[211] = 0;
   out_2725999673171291231[212] = 0;
   out_2725999673171291231[213] = 0;
   out_2725999673171291231[214] = 0;
   out_2725999673171291231[215] = 0;
   out_2725999673171291231[216] = 0;
   out_2725999673171291231[217] = 0;
   out_2725999673171291231[218] = 0;
   out_2725999673171291231[219] = 0;
   out_2725999673171291231[220] = 1;
   out_2725999673171291231[221] = 0;
   out_2725999673171291231[222] = 0;
   out_2725999673171291231[223] = 0;
   out_2725999673171291231[224] = 0;
   out_2725999673171291231[225] = 0;
   out_2725999673171291231[226] = 0;
   out_2725999673171291231[227] = 0;
   out_2725999673171291231[228] = 0;
   out_2725999673171291231[229] = 0;
   out_2725999673171291231[230] = 0;
   out_2725999673171291231[231] = 0;
   out_2725999673171291231[232] = 0;
   out_2725999673171291231[233] = 0;
   out_2725999673171291231[234] = 0;
   out_2725999673171291231[235] = 0;
   out_2725999673171291231[236] = 0;
   out_2725999673171291231[237] = 0;
   out_2725999673171291231[238] = 0;
   out_2725999673171291231[239] = 0;
   out_2725999673171291231[240] = 0;
   out_2725999673171291231[241] = 0;
   out_2725999673171291231[242] = 1;
   out_2725999673171291231[243] = 0;
   out_2725999673171291231[244] = 0;
   out_2725999673171291231[245] = 0;
   out_2725999673171291231[246] = 0;
   out_2725999673171291231[247] = 0;
   out_2725999673171291231[248] = 0;
   out_2725999673171291231[249] = 0;
   out_2725999673171291231[250] = 0;
   out_2725999673171291231[251] = 0;
   out_2725999673171291231[252] = 0;
   out_2725999673171291231[253] = 0;
   out_2725999673171291231[254] = 0;
   out_2725999673171291231[255] = 0;
   out_2725999673171291231[256] = 0;
   out_2725999673171291231[257] = 0;
   out_2725999673171291231[258] = 0;
   out_2725999673171291231[259] = 0;
   out_2725999673171291231[260] = 0;
   out_2725999673171291231[261] = 0;
   out_2725999673171291231[262] = 0;
   out_2725999673171291231[263] = 0;
   out_2725999673171291231[264] = 1;
   out_2725999673171291231[265] = 0;
   out_2725999673171291231[266] = 0;
   out_2725999673171291231[267] = 0;
   out_2725999673171291231[268] = 0;
   out_2725999673171291231[269] = 0;
   out_2725999673171291231[270] = 0;
   out_2725999673171291231[271] = 0;
   out_2725999673171291231[272] = 0;
   out_2725999673171291231[273] = 0;
   out_2725999673171291231[274] = 0;
   out_2725999673171291231[275] = 0;
   out_2725999673171291231[276] = 0;
   out_2725999673171291231[277] = 0;
   out_2725999673171291231[278] = 0;
   out_2725999673171291231[279] = 0;
   out_2725999673171291231[280] = 0;
   out_2725999673171291231[281] = 0;
   out_2725999673171291231[282] = 0;
   out_2725999673171291231[283] = 0;
   out_2725999673171291231[284] = 0;
   out_2725999673171291231[285] = 0;
   out_2725999673171291231[286] = 1;
   out_2725999673171291231[287] = 0;
   out_2725999673171291231[288] = 0;
   out_2725999673171291231[289] = 0;
   out_2725999673171291231[290] = 0;
   out_2725999673171291231[291] = 0;
   out_2725999673171291231[292] = 0;
   out_2725999673171291231[293] = 0;
   out_2725999673171291231[294] = 0;
   out_2725999673171291231[295] = 0;
   out_2725999673171291231[296] = 0;
   out_2725999673171291231[297] = 0;
   out_2725999673171291231[298] = 0;
   out_2725999673171291231[299] = 0;
   out_2725999673171291231[300] = 0;
   out_2725999673171291231[301] = 0;
   out_2725999673171291231[302] = 0;
   out_2725999673171291231[303] = 0;
   out_2725999673171291231[304] = 0;
   out_2725999673171291231[305] = 0;
   out_2725999673171291231[306] = 0;
   out_2725999673171291231[307] = 0;
   out_2725999673171291231[308] = 1;
   out_2725999673171291231[309] = 0;
   out_2725999673171291231[310] = 0;
   out_2725999673171291231[311] = 0;
   out_2725999673171291231[312] = 0;
   out_2725999673171291231[313] = 0;
   out_2725999673171291231[314] = 0;
   out_2725999673171291231[315] = 0;
   out_2725999673171291231[316] = 0;
   out_2725999673171291231[317] = 0;
   out_2725999673171291231[318] = 0;
   out_2725999673171291231[319] = 0;
   out_2725999673171291231[320] = 0;
   out_2725999673171291231[321] = 0;
   out_2725999673171291231[322] = 0;
   out_2725999673171291231[323] = 0;
   out_2725999673171291231[324] = 0;
   out_2725999673171291231[325] = 0;
   out_2725999673171291231[326] = 0;
   out_2725999673171291231[327] = 0;
   out_2725999673171291231[328] = 0;
   out_2725999673171291231[329] = 0;
   out_2725999673171291231[330] = 1;
   out_2725999673171291231[331] = 0;
   out_2725999673171291231[332] = 0;
   out_2725999673171291231[333] = 0;
   out_2725999673171291231[334] = 0;
   out_2725999673171291231[335] = 0;
   out_2725999673171291231[336] = 0;
   out_2725999673171291231[337] = 0;
   out_2725999673171291231[338] = 0;
   out_2725999673171291231[339] = 0;
   out_2725999673171291231[340] = 0;
   out_2725999673171291231[341] = 0;
   out_2725999673171291231[342] = 0;
   out_2725999673171291231[343] = 0;
   out_2725999673171291231[344] = 0;
   out_2725999673171291231[345] = 0;
   out_2725999673171291231[346] = 0;
   out_2725999673171291231[347] = 0;
   out_2725999673171291231[348] = 0;
   out_2725999673171291231[349] = 0;
   out_2725999673171291231[350] = 0;
   out_2725999673171291231[351] = 0;
   out_2725999673171291231[352] = 1;
   out_2725999673171291231[353] = 0;
   out_2725999673171291231[354] = 0;
   out_2725999673171291231[355] = 0;
   out_2725999673171291231[356] = 0;
   out_2725999673171291231[357] = 0;
   out_2725999673171291231[358] = 0;
   out_2725999673171291231[359] = 0;
   out_2725999673171291231[360] = 0;
   out_2725999673171291231[361] = 0;
   out_2725999673171291231[362] = 0;
   out_2725999673171291231[363] = 0;
   out_2725999673171291231[364] = 0;
   out_2725999673171291231[365] = 0;
   out_2725999673171291231[366] = 0;
   out_2725999673171291231[367] = 0;
   out_2725999673171291231[368] = 0;
   out_2725999673171291231[369] = 0;
   out_2725999673171291231[370] = 0;
   out_2725999673171291231[371] = 0;
   out_2725999673171291231[372] = 0;
   out_2725999673171291231[373] = 0;
   out_2725999673171291231[374] = 1;
   out_2725999673171291231[375] = 0;
   out_2725999673171291231[376] = 0;
   out_2725999673171291231[377] = 0;
   out_2725999673171291231[378] = 0;
   out_2725999673171291231[379] = 0;
   out_2725999673171291231[380] = 0;
   out_2725999673171291231[381] = 0;
   out_2725999673171291231[382] = 0;
   out_2725999673171291231[383] = 0;
   out_2725999673171291231[384] = 0;
   out_2725999673171291231[385] = 0;
   out_2725999673171291231[386] = 0;
   out_2725999673171291231[387] = 0;
   out_2725999673171291231[388] = 0;
   out_2725999673171291231[389] = 0;
   out_2725999673171291231[390] = 0;
   out_2725999673171291231[391] = 0;
   out_2725999673171291231[392] = 0;
   out_2725999673171291231[393] = 0;
   out_2725999673171291231[394] = 0;
   out_2725999673171291231[395] = 0;
   out_2725999673171291231[396] = 1;
   out_2725999673171291231[397] = 0;
   out_2725999673171291231[398] = 0;
   out_2725999673171291231[399] = 0;
   out_2725999673171291231[400] = 0;
   out_2725999673171291231[401] = 0;
   out_2725999673171291231[402] = 0;
   out_2725999673171291231[403] = 0;
   out_2725999673171291231[404] = 0;
   out_2725999673171291231[405] = 0;
   out_2725999673171291231[406] = 0;
   out_2725999673171291231[407] = 0;
   out_2725999673171291231[408] = 0;
   out_2725999673171291231[409] = 0;
   out_2725999673171291231[410] = 0;
   out_2725999673171291231[411] = 0;
   out_2725999673171291231[412] = 0;
   out_2725999673171291231[413] = 0;
   out_2725999673171291231[414] = 0;
   out_2725999673171291231[415] = 0;
   out_2725999673171291231[416] = 0;
   out_2725999673171291231[417] = 0;
   out_2725999673171291231[418] = 1;
   out_2725999673171291231[419] = 0;
   out_2725999673171291231[420] = 0;
   out_2725999673171291231[421] = 0;
   out_2725999673171291231[422] = 0;
   out_2725999673171291231[423] = 0;
   out_2725999673171291231[424] = 0;
   out_2725999673171291231[425] = 0;
   out_2725999673171291231[426] = 0;
   out_2725999673171291231[427] = 0;
   out_2725999673171291231[428] = 0;
   out_2725999673171291231[429] = 0;
   out_2725999673171291231[430] = 0;
   out_2725999673171291231[431] = 0;
   out_2725999673171291231[432] = 0;
   out_2725999673171291231[433] = 0;
   out_2725999673171291231[434] = 0;
   out_2725999673171291231[435] = 0;
   out_2725999673171291231[436] = 0;
   out_2725999673171291231[437] = 0;
   out_2725999673171291231[438] = 0;
   out_2725999673171291231[439] = 0;
   out_2725999673171291231[440] = 1;
}
void h_4(double *state, double *unused, double *out_8616059814145978514) {
   out_8616059814145978514[0] = state[10] + state[13];
   out_8616059814145978514[1] = state[11] + state[14];
   out_8616059814145978514[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4559519035519719826) {
   out_4559519035519719826[0] = 0;
   out_4559519035519719826[1] = 0;
   out_4559519035519719826[2] = 0;
   out_4559519035519719826[3] = 0;
   out_4559519035519719826[4] = 0;
   out_4559519035519719826[5] = 0;
   out_4559519035519719826[6] = 0;
   out_4559519035519719826[7] = 0;
   out_4559519035519719826[8] = 0;
   out_4559519035519719826[9] = 0;
   out_4559519035519719826[10] = 1;
   out_4559519035519719826[11] = 0;
   out_4559519035519719826[12] = 0;
   out_4559519035519719826[13] = 1;
   out_4559519035519719826[14] = 0;
   out_4559519035519719826[15] = 0;
   out_4559519035519719826[16] = 0;
   out_4559519035519719826[17] = 0;
   out_4559519035519719826[18] = 0;
   out_4559519035519719826[19] = 0;
   out_4559519035519719826[20] = 0;
   out_4559519035519719826[21] = 0;
   out_4559519035519719826[22] = 0;
   out_4559519035519719826[23] = 0;
   out_4559519035519719826[24] = 0;
   out_4559519035519719826[25] = 0;
   out_4559519035519719826[26] = 0;
   out_4559519035519719826[27] = 0;
   out_4559519035519719826[28] = 0;
   out_4559519035519719826[29] = 0;
   out_4559519035519719826[30] = 0;
   out_4559519035519719826[31] = 0;
   out_4559519035519719826[32] = 0;
   out_4559519035519719826[33] = 1;
   out_4559519035519719826[34] = 0;
   out_4559519035519719826[35] = 0;
   out_4559519035519719826[36] = 1;
   out_4559519035519719826[37] = 0;
   out_4559519035519719826[38] = 0;
   out_4559519035519719826[39] = 0;
   out_4559519035519719826[40] = 0;
   out_4559519035519719826[41] = 0;
   out_4559519035519719826[42] = 0;
   out_4559519035519719826[43] = 0;
   out_4559519035519719826[44] = 0;
   out_4559519035519719826[45] = 0;
   out_4559519035519719826[46] = 0;
   out_4559519035519719826[47] = 0;
   out_4559519035519719826[48] = 0;
   out_4559519035519719826[49] = 0;
   out_4559519035519719826[50] = 0;
   out_4559519035519719826[51] = 0;
   out_4559519035519719826[52] = 0;
   out_4559519035519719826[53] = 0;
   out_4559519035519719826[54] = 0;
   out_4559519035519719826[55] = 0;
   out_4559519035519719826[56] = 1;
   out_4559519035519719826[57] = 0;
   out_4559519035519719826[58] = 0;
   out_4559519035519719826[59] = 1;
   out_4559519035519719826[60] = 0;
   out_4559519035519719826[61] = 0;
   out_4559519035519719826[62] = 0;
   out_4559519035519719826[63] = 0;
   out_4559519035519719826[64] = 0;
   out_4559519035519719826[65] = 0;
}
void h_9(double *state, double *unused, double *out_1324040322580831860) {
   out_1324040322580831860[0] = state[10];
   out_1324040322580831860[1] = state[11];
   out_1324040322580831860[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6600006102925384320) {
   out_6600006102925384320[0] = 0;
   out_6600006102925384320[1] = 0;
   out_6600006102925384320[2] = 0;
   out_6600006102925384320[3] = 0;
   out_6600006102925384320[4] = 0;
   out_6600006102925384320[5] = 0;
   out_6600006102925384320[6] = 0;
   out_6600006102925384320[7] = 0;
   out_6600006102925384320[8] = 0;
   out_6600006102925384320[9] = 0;
   out_6600006102925384320[10] = 1;
   out_6600006102925384320[11] = 0;
   out_6600006102925384320[12] = 0;
   out_6600006102925384320[13] = 0;
   out_6600006102925384320[14] = 0;
   out_6600006102925384320[15] = 0;
   out_6600006102925384320[16] = 0;
   out_6600006102925384320[17] = 0;
   out_6600006102925384320[18] = 0;
   out_6600006102925384320[19] = 0;
   out_6600006102925384320[20] = 0;
   out_6600006102925384320[21] = 0;
   out_6600006102925384320[22] = 0;
   out_6600006102925384320[23] = 0;
   out_6600006102925384320[24] = 0;
   out_6600006102925384320[25] = 0;
   out_6600006102925384320[26] = 0;
   out_6600006102925384320[27] = 0;
   out_6600006102925384320[28] = 0;
   out_6600006102925384320[29] = 0;
   out_6600006102925384320[30] = 0;
   out_6600006102925384320[31] = 0;
   out_6600006102925384320[32] = 0;
   out_6600006102925384320[33] = 1;
   out_6600006102925384320[34] = 0;
   out_6600006102925384320[35] = 0;
   out_6600006102925384320[36] = 0;
   out_6600006102925384320[37] = 0;
   out_6600006102925384320[38] = 0;
   out_6600006102925384320[39] = 0;
   out_6600006102925384320[40] = 0;
   out_6600006102925384320[41] = 0;
   out_6600006102925384320[42] = 0;
   out_6600006102925384320[43] = 0;
   out_6600006102925384320[44] = 0;
   out_6600006102925384320[45] = 0;
   out_6600006102925384320[46] = 0;
   out_6600006102925384320[47] = 0;
   out_6600006102925384320[48] = 0;
   out_6600006102925384320[49] = 0;
   out_6600006102925384320[50] = 0;
   out_6600006102925384320[51] = 0;
   out_6600006102925384320[52] = 0;
   out_6600006102925384320[53] = 0;
   out_6600006102925384320[54] = 0;
   out_6600006102925384320[55] = 0;
   out_6600006102925384320[56] = 1;
   out_6600006102925384320[57] = 0;
   out_6600006102925384320[58] = 0;
   out_6600006102925384320[59] = 0;
   out_6600006102925384320[60] = 0;
   out_6600006102925384320[61] = 0;
   out_6600006102925384320[62] = 0;
   out_6600006102925384320[63] = 0;
   out_6600006102925384320[64] = 0;
   out_6600006102925384320[65] = 0;
}
void h_10(double *state, double *unused, double *out_8744657120921916929) {
   out_8744657120921916929[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8744657120921916929[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8744657120921916929[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3840710102944076896) {
   out_3840710102944076896[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3840710102944076896[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3840710102944076896[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3840710102944076896[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3840710102944076896[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3840710102944076896[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3840710102944076896[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3840710102944076896[7] = 0;
   out_3840710102944076896[8] = 0;
   out_3840710102944076896[9] = 0;
   out_3840710102944076896[10] = 0;
   out_3840710102944076896[11] = 0;
   out_3840710102944076896[12] = 0;
   out_3840710102944076896[13] = 0;
   out_3840710102944076896[14] = 0;
   out_3840710102944076896[15] = 0;
   out_3840710102944076896[16] = 1;
   out_3840710102944076896[17] = 0;
   out_3840710102944076896[18] = 0;
   out_3840710102944076896[19] = 1;
   out_3840710102944076896[20] = 0;
   out_3840710102944076896[21] = 0;
   out_3840710102944076896[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3840710102944076896[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3840710102944076896[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3840710102944076896[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3840710102944076896[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3840710102944076896[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3840710102944076896[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3840710102944076896[29] = 0;
   out_3840710102944076896[30] = 0;
   out_3840710102944076896[31] = 0;
   out_3840710102944076896[32] = 0;
   out_3840710102944076896[33] = 0;
   out_3840710102944076896[34] = 0;
   out_3840710102944076896[35] = 0;
   out_3840710102944076896[36] = 0;
   out_3840710102944076896[37] = 0;
   out_3840710102944076896[38] = 0;
   out_3840710102944076896[39] = 1;
   out_3840710102944076896[40] = 0;
   out_3840710102944076896[41] = 0;
   out_3840710102944076896[42] = 1;
   out_3840710102944076896[43] = 0;
   out_3840710102944076896[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3840710102944076896[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3840710102944076896[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3840710102944076896[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3840710102944076896[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3840710102944076896[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3840710102944076896[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3840710102944076896[51] = 0;
   out_3840710102944076896[52] = 0;
   out_3840710102944076896[53] = 0;
   out_3840710102944076896[54] = 0;
   out_3840710102944076896[55] = 0;
   out_3840710102944076896[56] = 0;
   out_3840710102944076896[57] = 0;
   out_3840710102944076896[58] = 0;
   out_3840710102944076896[59] = 0;
   out_3840710102944076896[60] = 0;
   out_3840710102944076896[61] = 0;
   out_3840710102944076896[62] = 1;
   out_3840710102944076896[63] = 0;
   out_3840710102944076896[64] = 0;
   out_3840710102944076896[65] = 1;
}
void h_12(double *state, double *unused, double *out_4204782893406516894) {
   out_4204782893406516894[0] = state[0];
   out_4204782893406516894[1] = state[1];
   out_4204782893406516894[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1821739341523013170) {
   out_1821739341523013170[0] = 1;
   out_1821739341523013170[1] = 0;
   out_1821739341523013170[2] = 0;
   out_1821739341523013170[3] = 0;
   out_1821739341523013170[4] = 0;
   out_1821739341523013170[5] = 0;
   out_1821739341523013170[6] = 0;
   out_1821739341523013170[7] = 0;
   out_1821739341523013170[8] = 0;
   out_1821739341523013170[9] = 0;
   out_1821739341523013170[10] = 0;
   out_1821739341523013170[11] = 0;
   out_1821739341523013170[12] = 0;
   out_1821739341523013170[13] = 0;
   out_1821739341523013170[14] = 0;
   out_1821739341523013170[15] = 0;
   out_1821739341523013170[16] = 0;
   out_1821739341523013170[17] = 0;
   out_1821739341523013170[18] = 0;
   out_1821739341523013170[19] = 0;
   out_1821739341523013170[20] = 0;
   out_1821739341523013170[21] = 0;
   out_1821739341523013170[22] = 0;
   out_1821739341523013170[23] = 1;
   out_1821739341523013170[24] = 0;
   out_1821739341523013170[25] = 0;
   out_1821739341523013170[26] = 0;
   out_1821739341523013170[27] = 0;
   out_1821739341523013170[28] = 0;
   out_1821739341523013170[29] = 0;
   out_1821739341523013170[30] = 0;
   out_1821739341523013170[31] = 0;
   out_1821739341523013170[32] = 0;
   out_1821739341523013170[33] = 0;
   out_1821739341523013170[34] = 0;
   out_1821739341523013170[35] = 0;
   out_1821739341523013170[36] = 0;
   out_1821739341523013170[37] = 0;
   out_1821739341523013170[38] = 0;
   out_1821739341523013170[39] = 0;
   out_1821739341523013170[40] = 0;
   out_1821739341523013170[41] = 0;
   out_1821739341523013170[42] = 0;
   out_1821739341523013170[43] = 0;
   out_1821739341523013170[44] = 0;
   out_1821739341523013170[45] = 0;
   out_1821739341523013170[46] = 1;
   out_1821739341523013170[47] = 0;
   out_1821739341523013170[48] = 0;
   out_1821739341523013170[49] = 0;
   out_1821739341523013170[50] = 0;
   out_1821739341523013170[51] = 0;
   out_1821739341523013170[52] = 0;
   out_1821739341523013170[53] = 0;
   out_1821739341523013170[54] = 0;
   out_1821739341523013170[55] = 0;
   out_1821739341523013170[56] = 0;
   out_1821739341523013170[57] = 0;
   out_1821739341523013170[58] = 0;
   out_1821739341523013170[59] = 0;
   out_1821739341523013170[60] = 0;
   out_1821739341523013170[61] = 0;
   out_1821739341523013170[62] = 0;
   out_1821739341523013170[63] = 0;
   out_1821739341523013170[64] = 0;
   out_1821739341523013170[65] = 0;
}
void h_35(double *state, double *unused, double *out_2956882728595847292) {
   out_2956882728595847292[0] = state[7];
   out_2956882728595847292[1] = state[8];
   out_2956882728595847292[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7926181092892327202) {
   out_7926181092892327202[0] = 0;
   out_7926181092892327202[1] = 0;
   out_7926181092892327202[2] = 0;
   out_7926181092892327202[3] = 0;
   out_7926181092892327202[4] = 0;
   out_7926181092892327202[5] = 0;
   out_7926181092892327202[6] = 0;
   out_7926181092892327202[7] = 1;
   out_7926181092892327202[8] = 0;
   out_7926181092892327202[9] = 0;
   out_7926181092892327202[10] = 0;
   out_7926181092892327202[11] = 0;
   out_7926181092892327202[12] = 0;
   out_7926181092892327202[13] = 0;
   out_7926181092892327202[14] = 0;
   out_7926181092892327202[15] = 0;
   out_7926181092892327202[16] = 0;
   out_7926181092892327202[17] = 0;
   out_7926181092892327202[18] = 0;
   out_7926181092892327202[19] = 0;
   out_7926181092892327202[20] = 0;
   out_7926181092892327202[21] = 0;
   out_7926181092892327202[22] = 0;
   out_7926181092892327202[23] = 0;
   out_7926181092892327202[24] = 0;
   out_7926181092892327202[25] = 0;
   out_7926181092892327202[26] = 0;
   out_7926181092892327202[27] = 0;
   out_7926181092892327202[28] = 0;
   out_7926181092892327202[29] = 0;
   out_7926181092892327202[30] = 1;
   out_7926181092892327202[31] = 0;
   out_7926181092892327202[32] = 0;
   out_7926181092892327202[33] = 0;
   out_7926181092892327202[34] = 0;
   out_7926181092892327202[35] = 0;
   out_7926181092892327202[36] = 0;
   out_7926181092892327202[37] = 0;
   out_7926181092892327202[38] = 0;
   out_7926181092892327202[39] = 0;
   out_7926181092892327202[40] = 0;
   out_7926181092892327202[41] = 0;
   out_7926181092892327202[42] = 0;
   out_7926181092892327202[43] = 0;
   out_7926181092892327202[44] = 0;
   out_7926181092892327202[45] = 0;
   out_7926181092892327202[46] = 0;
   out_7926181092892327202[47] = 0;
   out_7926181092892327202[48] = 0;
   out_7926181092892327202[49] = 0;
   out_7926181092892327202[50] = 0;
   out_7926181092892327202[51] = 0;
   out_7926181092892327202[52] = 0;
   out_7926181092892327202[53] = 1;
   out_7926181092892327202[54] = 0;
   out_7926181092892327202[55] = 0;
   out_7926181092892327202[56] = 0;
   out_7926181092892327202[57] = 0;
   out_7926181092892327202[58] = 0;
   out_7926181092892327202[59] = 0;
   out_7926181092892327202[60] = 0;
   out_7926181092892327202[61] = 0;
   out_7926181092892327202[62] = 0;
   out_7926181092892327202[63] = 0;
   out_7926181092892327202[64] = 0;
   out_7926181092892327202[65] = 0;
}
void h_32(double *state, double *unused, double *out_4545560158010009988) {
   out_4545560158010009988[0] = state[3];
   out_4545560158010009988[1] = state[4];
   out_4545560158010009988[2] = state[5];
   out_4545560158010009988[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8579724643484215613) {
   out_8579724643484215613[0] = 0;
   out_8579724643484215613[1] = 0;
   out_8579724643484215613[2] = 0;
   out_8579724643484215613[3] = 1;
   out_8579724643484215613[4] = 0;
   out_8579724643484215613[5] = 0;
   out_8579724643484215613[6] = 0;
   out_8579724643484215613[7] = 0;
   out_8579724643484215613[8] = 0;
   out_8579724643484215613[9] = 0;
   out_8579724643484215613[10] = 0;
   out_8579724643484215613[11] = 0;
   out_8579724643484215613[12] = 0;
   out_8579724643484215613[13] = 0;
   out_8579724643484215613[14] = 0;
   out_8579724643484215613[15] = 0;
   out_8579724643484215613[16] = 0;
   out_8579724643484215613[17] = 0;
   out_8579724643484215613[18] = 0;
   out_8579724643484215613[19] = 0;
   out_8579724643484215613[20] = 0;
   out_8579724643484215613[21] = 0;
   out_8579724643484215613[22] = 0;
   out_8579724643484215613[23] = 0;
   out_8579724643484215613[24] = 0;
   out_8579724643484215613[25] = 0;
   out_8579724643484215613[26] = 1;
   out_8579724643484215613[27] = 0;
   out_8579724643484215613[28] = 0;
   out_8579724643484215613[29] = 0;
   out_8579724643484215613[30] = 0;
   out_8579724643484215613[31] = 0;
   out_8579724643484215613[32] = 0;
   out_8579724643484215613[33] = 0;
   out_8579724643484215613[34] = 0;
   out_8579724643484215613[35] = 0;
   out_8579724643484215613[36] = 0;
   out_8579724643484215613[37] = 0;
   out_8579724643484215613[38] = 0;
   out_8579724643484215613[39] = 0;
   out_8579724643484215613[40] = 0;
   out_8579724643484215613[41] = 0;
   out_8579724643484215613[42] = 0;
   out_8579724643484215613[43] = 0;
   out_8579724643484215613[44] = 0;
   out_8579724643484215613[45] = 0;
   out_8579724643484215613[46] = 0;
   out_8579724643484215613[47] = 0;
   out_8579724643484215613[48] = 0;
   out_8579724643484215613[49] = 1;
   out_8579724643484215613[50] = 0;
   out_8579724643484215613[51] = 0;
   out_8579724643484215613[52] = 0;
   out_8579724643484215613[53] = 0;
   out_8579724643484215613[54] = 0;
   out_8579724643484215613[55] = 0;
   out_8579724643484215613[56] = 0;
   out_8579724643484215613[57] = 0;
   out_8579724643484215613[58] = 0;
   out_8579724643484215613[59] = 0;
   out_8579724643484215613[60] = 0;
   out_8579724643484215613[61] = 0;
   out_8579724643484215613[62] = 0;
   out_8579724643484215613[63] = 0;
   out_8579724643484215613[64] = 0;
   out_8579724643484215613[65] = 0;
   out_8579724643484215613[66] = 0;
   out_8579724643484215613[67] = 0;
   out_8579724643484215613[68] = 0;
   out_8579724643484215613[69] = 0;
   out_8579724643484215613[70] = 0;
   out_8579724643484215613[71] = 0;
   out_8579724643484215613[72] = 1;
   out_8579724643484215613[73] = 0;
   out_8579724643484215613[74] = 0;
   out_8579724643484215613[75] = 0;
   out_8579724643484215613[76] = 0;
   out_8579724643484215613[77] = 0;
   out_8579724643484215613[78] = 0;
   out_8579724643484215613[79] = 0;
   out_8579724643484215613[80] = 0;
   out_8579724643484215613[81] = 0;
   out_8579724643484215613[82] = 0;
   out_8579724643484215613[83] = 0;
   out_8579724643484215613[84] = 0;
   out_8579724643484215613[85] = 0;
   out_8579724643484215613[86] = 0;
   out_8579724643484215613[87] = 0;
}
void h_13(double *state, double *unused, double *out_665213163273114834) {
   out_665213163273114834[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_665213163273114834[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_665213163273114834[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5576902823318934147) {
   out_5576902823318934147[0] = 0;
   out_5576902823318934147[1] = 0;
   out_5576902823318934147[2] = 0;
   out_5576902823318934147[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5576902823318934147[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5576902823318934147[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5576902823318934147[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5576902823318934147[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5576902823318934147[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5576902823318934147[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5576902823318934147[10] = 0;
   out_5576902823318934147[11] = 0;
   out_5576902823318934147[12] = 0;
   out_5576902823318934147[13] = 0;
   out_5576902823318934147[14] = 0;
   out_5576902823318934147[15] = 0;
   out_5576902823318934147[16] = 0;
   out_5576902823318934147[17] = 0;
   out_5576902823318934147[18] = 0;
   out_5576902823318934147[19] = 0;
   out_5576902823318934147[20] = 0;
   out_5576902823318934147[21] = 0;
   out_5576902823318934147[22] = 0;
   out_5576902823318934147[23] = 0;
   out_5576902823318934147[24] = 0;
   out_5576902823318934147[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5576902823318934147[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5576902823318934147[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5576902823318934147[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5576902823318934147[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5576902823318934147[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5576902823318934147[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5576902823318934147[32] = 0;
   out_5576902823318934147[33] = 0;
   out_5576902823318934147[34] = 0;
   out_5576902823318934147[35] = 0;
   out_5576902823318934147[36] = 0;
   out_5576902823318934147[37] = 0;
   out_5576902823318934147[38] = 0;
   out_5576902823318934147[39] = 0;
   out_5576902823318934147[40] = 0;
   out_5576902823318934147[41] = 0;
   out_5576902823318934147[42] = 0;
   out_5576902823318934147[43] = 0;
   out_5576902823318934147[44] = 0;
   out_5576902823318934147[45] = 0;
   out_5576902823318934147[46] = 0;
   out_5576902823318934147[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5576902823318934147[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5576902823318934147[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5576902823318934147[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5576902823318934147[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5576902823318934147[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5576902823318934147[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5576902823318934147[54] = 0;
   out_5576902823318934147[55] = 0;
   out_5576902823318934147[56] = 0;
   out_5576902823318934147[57] = 0;
   out_5576902823318934147[58] = 0;
   out_5576902823318934147[59] = 0;
   out_5576902823318934147[60] = 0;
   out_5576902823318934147[61] = 0;
   out_5576902823318934147[62] = 0;
   out_5576902823318934147[63] = 0;
   out_5576902823318934147[64] = 0;
   out_5576902823318934147[65] = 0;
}
void h_14(double *state, double *unused, double *out_1324040322580831860) {
   out_1324040322580831860[0] = state[10];
   out_1324040322580831860[1] = state[11];
   out_1324040322580831860[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6600006102925384320) {
   out_6600006102925384320[0] = 0;
   out_6600006102925384320[1] = 0;
   out_6600006102925384320[2] = 0;
   out_6600006102925384320[3] = 0;
   out_6600006102925384320[4] = 0;
   out_6600006102925384320[5] = 0;
   out_6600006102925384320[6] = 0;
   out_6600006102925384320[7] = 0;
   out_6600006102925384320[8] = 0;
   out_6600006102925384320[9] = 0;
   out_6600006102925384320[10] = 1;
   out_6600006102925384320[11] = 0;
   out_6600006102925384320[12] = 0;
   out_6600006102925384320[13] = 0;
   out_6600006102925384320[14] = 0;
   out_6600006102925384320[15] = 0;
   out_6600006102925384320[16] = 0;
   out_6600006102925384320[17] = 0;
   out_6600006102925384320[18] = 0;
   out_6600006102925384320[19] = 0;
   out_6600006102925384320[20] = 0;
   out_6600006102925384320[21] = 0;
   out_6600006102925384320[22] = 0;
   out_6600006102925384320[23] = 0;
   out_6600006102925384320[24] = 0;
   out_6600006102925384320[25] = 0;
   out_6600006102925384320[26] = 0;
   out_6600006102925384320[27] = 0;
   out_6600006102925384320[28] = 0;
   out_6600006102925384320[29] = 0;
   out_6600006102925384320[30] = 0;
   out_6600006102925384320[31] = 0;
   out_6600006102925384320[32] = 0;
   out_6600006102925384320[33] = 1;
   out_6600006102925384320[34] = 0;
   out_6600006102925384320[35] = 0;
   out_6600006102925384320[36] = 0;
   out_6600006102925384320[37] = 0;
   out_6600006102925384320[38] = 0;
   out_6600006102925384320[39] = 0;
   out_6600006102925384320[40] = 0;
   out_6600006102925384320[41] = 0;
   out_6600006102925384320[42] = 0;
   out_6600006102925384320[43] = 0;
   out_6600006102925384320[44] = 0;
   out_6600006102925384320[45] = 0;
   out_6600006102925384320[46] = 0;
   out_6600006102925384320[47] = 0;
   out_6600006102925384320[48] = 0;
   out_6600006102925384320[49] = 0;
   out_6600006102925384320[50] = 0;
   out_6600006102925384320[51] = 0;
   out_6600006102925384320[52] = 0;
   out_6600006102925384320[53] = 0;
   out_6600006102925384320[54] = 0;
   out_6600006102925384320[55] = 0;
   out_6600006102925384320[56] = 1;
   out_6600006102925384320[57] = 0;
   out_6600006102925384320[58] = 0;
   out_6600006102925384320[59] = 0;
   out_6600006102925384320[60] = 0;
   out_6600006102925384320[61] = 0;
   out_6600006102925384320[62] = 0;
   out_6600006102925384320[63] = 0;
   out_6600006102925384320[64] = 0;
   out_6600006102925384320[65] = 0;
}
void h_33(double *state, double *unused, double *out_7989437974873408495) {
   out_7989437974873408495[0] = state[16];
   out_7989437974873408495[1] = state[17];
   out_7989437974873408495[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7370005976178366810) {
   out_7370005976178366810[0] = 0;
   out_7370005976178366810[1] = 0;
   out_7370005976178366810[2] = 0;
   out_7370005976178366810[3] = 0;
   out_7370005976178366810[4] = 0;
   out_7370005976178366810[5] = 0;
   out_7370005976178366810[6] = 0;
   out_7370005976178366810[7] = 0;
   out_7370005976178366810[8] = 0;
   out_7370005976178366810[9] = 0;
   out_7370005976178366810[10] = 0;
   out_7370005976178366810[11] = 0;
   out_7370005976178366810[12] = 0;
   out_7370005976178366810[13] = 0;
   out_7370005976178366810[14] = 0;
   out_7370005976178366810[15] = 0;
   out_7370005976178366810[16] = 1;
   out_7370005976178366810[17] = 0;
   out_7370005976178366810[18] = 0;
   out_7370005976178366810[19] = 0;
   out_7370005976178366810[20] = 0;
   out_7370005976178366810[21] = 0;
   out_7370005976178366810[22] = 0;
   out_7370005976178366810[23] = 0;
   out_7370005976178366810[24] = 0;
   out_7370005976178366810[25] = 0;
   out_7370005976178366810[26] = 0;
   out_7370005976178366810[27] = 0;
   out_7370005976178366810[28] = 0;
   out_7370005976178366810[29] = 0;
   out_7370005976178366810[30] = 0;
   out_7370005976178366810[31] = 0;
   out_7370005976178366810[32] = 0;
   out_7370005976178366810[33] = 0;
   out_7370005976178366810[34] = 0;
   out_7370005976178366810[35] = 0;
   out_7370005976178366810[36] = 0;
   out_7370005976178366810[37] = 0;
   out_7370005976178366810[38] = 0;
   out_7370005976178366810[39] = 1;
   out_7370005976178366810[40] = 0;
   out_7370005976178366810[41] = 0;
   out_7370005976178366810[42] = 0;
   out_7370005976178366810[43] = 0;
   out_7370005976178366810[44] = 0;
   out_7370005976178366810[45] = 0;
   out_7370005976178366810[46] = 0;
   out_7370005976178366810[47] = 0;
   out_7370005976178366810[48] = 0;
   out_7370005976178366810[49] = 0;
   out_7370005976178366810[50] = 0;
   out_7370005976178366810[51] = 0;
   out_7370005976178366810[52] = 0;
   out_7370005976178366810[53] = 0;
   out_7370005976178366810[54] = 0;
   out_7370005976178366810[55] = 0;
   out_7370005976178366810[56] = 0;
   out_7370005976178366810[57] = 0;
   out_7370005976178366810[58] = 0;
   out_7370005976178366810[59] = 0;
   out_7370005976178366810[60] = 0;
   out_7370005976178366810[61] = 0;
   out_7370005976178366810[62] = 1;
   out_7370005976178366810[63] = 0;
   out_7370005976178366810[64] = 0;
   out_7370005976178366810[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_398726393068994039) {
  H(in_vec, out_398726393068994039);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7226699364716968282) {
  err_fun(nom_x, delta_x, out_7226699364716968282);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3146457545800539540) {
  inv_err_fun(nom_x, true_x, out_3146457545800539540);
}
void live_H_mod_fun(double *state, double *out_7216981441376091161) {
  H_mod_fun(state, out_7216981441376091161);
}
void live_f_fun(double *state, double dt, double *out_3387687771793490306) {
  f_fun(state,  dt, out_3387687771793490306);
}
void live_F_fun(double *state, double dt, double *out_2725999673171291231) {
  F_fun(state,  dt, out_2725999673171291231);
}
void live_h_4(double *state, double *unused, double *out_8616059814145978514) {
  h_4(state, unused, out_8616059814145978514);
}
void live_H_4(double *state, double *unused, double *out_4559519035519719826) {
  H_4(state, unused, out_4559519035519719826);
}
void live_h_9(double *state, double *unused, double *out_1324040322580831860) {
  h_9(state, unused, out_1324040322580831860);
}
void live_H_9(double *state, double *unused, double *out_6600006102925384320) {
  H_9(state, unused, out_6600006102925384320);
}
void live_h_10(double *state, double *unused, double *out_8744657120921916929) {
  h_10(state, unused, out_8744657120921916929);
}
void live_H_10(double *state, double *unused, double *out_3840710102944076896) {
  H_10(state, unused, out_3840710102944076896);
}
void live_h_12(double *state, double *unused, double *out_4204782893406516894) {
  h_12(state, unused, out_4204782893406516894);
}
void live_H_12(double *state, double *unused, double *out_1821739341523013170) {
  H_12(state, unused, out_1821739341523013170);
}
void live_h_35(double *state, double *unused, double *out_2956882728595847292) {
  h_35(state, unused, out_2956882728595847292);
}
void live_H_35(double *state, double *unused, double *out_7926181092892327202) {
  H_35(state, unused, out_7926181092892327202);
}
void live_h_32(double *state, double *unused, double *out_4545560158010009988) {
  h_32(state, unused, out_4545560158010009988);
}
void live_H_32(double *state, double *unused, double *out_8579724643484215613) {
  H_32(state, unused, out_8579724643484215613);
}
void live_h_13(double *state, double *unused, double *out_665213163273114834) {
  h_13(state, unused, out_665213163273114834);
}
void live_H_13(double *state, double *unused, double *out_5576902823318934147) {
  H_13(state, unused, out_5576902823318934147);
}
void live_h_14(double *state, double *unused, double *out_1324040322580831860) {
  h_14(state, unused, out_1324040322580831860);
}
void live_H_14(double *state, double *unused, double *out_6600006102925384320) {
  H_14(state, unused, out_6600006102925384320);
}
void live_h_33(double *state, double *unused, double *out_7989437974873408495) {
  h_33(state, unused, out_7989437974873408495);
}
void live_H_33(double *state, double *unused, double *out_7370005976178366810) {
  H_33(state, unused, out_7370005976178366810);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
